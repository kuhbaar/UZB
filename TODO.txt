Your boss has tasked you with writing a parser for his new auction platform UZB (UNIX Zealot Bay), the command line equivalent to the largest auction site online.
Your program shall listen on localhost port 2600 TCP, accept a connection and read lines from that stream. After the command '!end' is parsed, the connection shall be closed and the program shall terminate.

The commands are as follows:

Command: !login <username>
Example: !login alice
Output: Successfully logged in as alice!
Notes: All printable ASCII characters are allowed for the username.

Command: !logout
Output: Logged out.

Command: !list
Output: I am not a DCC file sharing bot.

Command: !create <duration> <description>
Example: !create 25200 Super small notebook
Output: An auction 'Super small notebook' has been created and will end after 25200 seconds.
Notes: The duration is an integer. The description may contain all printable ASCII characters and must be between 20 and 255 characters long. Validate that the duration is between 300 and 604800.

Command: !bid <auction-id> <amount>
Example: !bid 3 250.00
Output: You successfully bid 250.00 BTC on action number 3.
Notes: Your program should not accept amounts with sub-cent precision, i.e. it should be impossible to bid 0.001 BTC. The auction ID is an integer. Validate that the ID is between 1 and 65536 and that the amount is greater than 1 and no larger than 25000.

Command: !end
Output: Bye!
Notes: Your program should close the connection and terminate after this command.


If parsing fails, your program should print "FAIL".
If parsing succeeds but validation fails (e.g. if a value is out of bounds), your program should print "INVALID".

---------------------
Your submission to this assignment should be a single Zip file containing:
- A file "uzb.abnf" containing an ABNF notation of the UZB auction described above;
- A Java program UZB.java that contains a class UZB implements Visitor. This class should implement all necessary methods to produce the output. Additionally, it should contain a `public static void main(String args[])` to set up a socket, accept lines of input from the first connection that is established, hand each of them to the parser and pass the result to a new instance of UZB. After receiving the command '!end', the connection shall be closed and your program should terminate.

Do NOT submit any files generated by parse2.
--------------------

The current parse2 version and the code demonstrated during the lecture can be found in the file `langsec-lecture-code.zip`.
--------------------

References:
parse2 ABNF description - http://parse2.net/abnf.shtml
parse2 usage tutorial - http://parse2.net/manual-java.shtml
A small Java networking howto - http://www.javamex.com/tutorials/networking/introduction.shtml